// <auto-generated />
using System;
using Lifee.RSS.Application.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lifee.RSS.Application.DataAccess.Migrations
{
    [DbContext(typeof(LifeeDbContext))]
    partial class LifeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CategoryRssFeed", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("RssFeedsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "RssFeedsId");

                    b.HasIndex("RssFeedsId");

                    b.ToTable("CategoryRssFeed");
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.RssFeed.RssFeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RssFeeds");
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.Tag.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.User.UserRssFeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RssFeedId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RssFeedId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRssFeeds", (string)null);
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.User.UserRssFeedTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRssFeedTags", (string)null);
                });

            modelBuilder.Entity("UserRssFeedUserRssFeedTag", b =>
                {
                    b.Property<int>("RssFeedsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("RssFeedsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("UserRssFeedUserRssFeedTag");
                });

            modelBuilder.Entity("CategoryRssFeed", b =>
                {
                    b.HasOne("Lifee.RSS.Application.Models.Tag.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lifee.RSS.Application.Models.RssFeed.RssFeed", null)
                        .WithMany()
                        .HasForeignKey("RssFeedsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.RssFeed.RssFeed", b =>
                {
                    b.OwnsOne("Lifee.RSS.Application.Models.RssFeed.RssFeedConfiguration", "Configuration", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<int>("FeedId")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("RefreshTime")
                                .HasColumnType("time");

                            b1.Property<Guid>("Uuid")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("FeedId")
                                .IsUnique();

                            b1.ToTable("RssFeedConfigurations", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("FeedId");
                        });

                    b.OwnsMany("Lifee.RSS.Application.Models.RssFeed.RssFeedItem", "Items", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("FeedId")
                                .HasColumnType("int");

                            b1.Property<string>("ItemId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Link")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("Uuid")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("FeedId");

                            b1.ToTable("RssFeedItems", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("FeedId");
                        });

                    b.Navigation("Configuration")
                        .IsRequired();

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.User.UserRssFeed", b =>
                {
                    b.HasOne("Lifee.RSS.Application.Models.RssFeed.RssFeed", "RssFeed")
                        .WithMany("Users")
                        .HasForeignKey("RssFeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lifee.RSS.Application.Models.User.User", "User")
                        .WithMany("RssFeeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RssFeed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.User.UserRssFeedTag", b =>
                {
                    b.HasOne("Lifee.RSS.Application.Models.User.User", "User")
                        .WithMany("RssFeedTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRssFeedUserRssFeedTag", b =>
                {
                    b.HasOne("Lifee.RSS.Application.Models.User.UserRssFeed", null)
                        .WithMany()
                        .HasForeignKey("RssFeedsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lifee.RSS.Application.Models.User.UserRssFeedTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.RssFeed.RssFeed", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Lifee.RSS.Application.Models.User.User", b =>
                {
                    b.Navigation("RssFeedTags");

                    b.Navigation("RssFeeds");
                });
#pragma warning restore 612, 618
        }
    }
}
